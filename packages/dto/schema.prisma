datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "dist/"
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fabrics   Fabric[]
}

model Seller {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fabrics   Fabric[]
}

model Fabric {
  id          Int             @id @default(autoincrement())
  seller      Seller          @relation(fields: [sellerId], references: [id])
  sellerId    Int
  externalId  String          @unique
  itemNumber  String
  url         String
  name        String
  description String
  basePrice   Decimal
  rating      Decimal
  ratingCount Int
  ratingMax   Decimal
  brand       Brand           @relation(fields: [brandId], references: [id])
  brandId     Int
  category    FabricCategory  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  tags        String[]
  features    String?
  variants    FabricVariant[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model FabricCategory {
  id          Int      @id @default(autoincrement())
  externalId  String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  fabrics     Fabric[]
}

model FabricVariant {
  id            Int      @id @default(autoincrement())
  externalId    String   @unique
  fabric        Fabric   @relation(fields: [fabricId], references: [id])
  fabricId      Int
  name          String
  url           String
  colors        String[]
  image         Image    @relation("VariantImage", fields: [imageId], references: [id])
  imageId       Int
  swatchImage   Image    @relation("SwatchImage", fields: [swatchImageId], references: [id])
  swatchImageId Int
  images        Image[] // needed because of Image.fabricVariant
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Image {
  id              Int             @id @default(autoincrement())
  originalUrl     String          @unique
  relativeUrl     String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  fabricVariants  FabricVariant[] @relation("VariantImage")
  swatchVariants  FabricVariant[] @relation("SwatchImage")
  fabricVariant   FabricVariant?  @relation(fields: [fabricVariantId], references: [id])
  fabricVariantId Int?
}
